record(bo, "$(Sys){$(Dev)}Init-Cmd") {
    field(DESC, "(setup EOL and number format)")
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto initialize_smarpod($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(FLNK, "$(Sys){$(Dev)}AllSts-Cmd")
}

record(fanout, "$(Sys){$(Dev)}AllSts-Cmd") {
    field(LNK1, "$(Sys){$(Dev)}Unit-I")
    field(LNK2, "$(Sys){$(Dev)}ReadVer-Cmd")
    field(LNK3, "$(Sys){$(Dev)}ReadSts-Cmd")
}

# Controlling unit number
record(ao, "$(Sys){$(Dev)}Unit-SP") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_int($(Sys),$(Dev),\\%unit) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(FLNK, "$(Sys){$(Dev)}Unit-I")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "")
}

record(ai, "$(Sys){$(Dev)}Unit-I")
{
    field(DESC, "Selected SmarPod unit")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_int($(Sys),$(Dev),\\%unit) $(PORT) $(A)")
    field(SCAN, "Passive")
}

# Reference
record(bo, "$(Sys){$(Dev)}Ref-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto reference($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(ZNAM, "Reference")
    field(ONAM, "Reference")
}

record(bi, "$(Sys){$(Dev)}Ref-I")
{
    field(DESC, "Readback referenced state")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_int($(Sys),$(Dev),ref) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "1 second")
    field(ZNAM, "Unreferenced")
    field(ONAM, "Referenced")
}

record(ai, "$(Sys){$(Dev)}ARef-I")
{
    field(DESC, "Async reference response")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto async_ref_response($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "I/O Intr")
}

# Positions - Move
record(bo, "$(Sys){$(Dev)}Move-Cmd")
{
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto move_mm($(Sys),$(Dev)) $(PORT) $(A)")
}

record(ao, "$(Sys){$(Dev)-Ax:1}Pos-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:1}TwkPos-SP")
{
    field(DESC, "Position tweak value")
    field(PREC, "3")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:1}TwkPos-Cmd")
{
    field(DESC, "Tweak positive Ax:1")
    field(INPA, "$(Sys){$(Dev)-Ax:1}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:1}TwkPos-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:1}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:1}TwkNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:1")
    field(INPA, "$(Sys){$(Dev)-Ax:1}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:1}TwkPos-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:1}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(ao, "$(Sys){$(Dev)-Ax:2}Pos-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:2}TwkPos-SP")
{
    field(DESC, "Position tweak value")
    field(PREC, "3")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:2}TwkPos-Cmd")
{
    field(DESC, "Tweak positive Ax:2")
    field(INPA, "$(Sys){$(Dev)-Ax:2}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:2}TwkPos-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:2}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:2}TwkNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:2")
    field(INPA, "$(Sys){$(Dev)-Ax:2}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:2}TwkPos-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:2}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(ao, "$(Sys){$(Dev)-Ax:3}Pos-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:3}TwkPos-SP")
{
    field(DESC, "Position tweak value")
    field(PREC, "3")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:3}TwkPos-Cmd")
{
    field(DESC, "Tweak positive Ax:3")
    field(INPA, "$(Sys){$(Dev)-Ax:3}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:3}TwkPos-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:3}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:3}TwkNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:3")
    field(INPA, "$(Sys){$(Dev)-Ax:3}Pos-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:3}TwkPos-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:3}Pos-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(ao, "$(Sys){$(Dev)-Ax:1}Rot-SP")
{
    field(PREC, "6")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:1}TwkRot-SP")
{
    field(DESC, "Rotation tweak value")
    field(PREC, "3")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:1}TwkRotPos-Cmd")
{
    field(DESC, "Tweak Rotitive Ax:1")
    field(INPA, "$(Sys){$(Dev)-Ax:1}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:1}TwkRot-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:1}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:1}TwkRotNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:1")
    field(INPA, "$(Sys){$(Dev)-Ax:1}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:1}TwkRot-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:1}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(ao, "$(Sys){$(Dev)-Ax:2}Rot-SP")
{
    field(PREC, "6")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:2}TwkRot-SP")
{
    field(DESC, "Rotation tweak value")
    field(PREC, "3")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:2}TwkRotPos-Cmd")
{
    field(DESC, "Tweak Rotitive Ax:2")
    field(INPA, "$(Sys){$(Dev)-Ax:2}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:2}TwkRot-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:2}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:2}TwkRotNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:2")
    field(INPA, "$(Sys){$(Dev)-Ax:2}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:2}TwkRot-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:2}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(ao, "$(Sys){$(Dev)-Ax:3}Rot-SP")
{
    field(PREC, "6")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:3}TwkRot-SP")
{
    field(DESC, "Rotation tweak value")
    field(PREC, "3")
    field(EGU, "deg")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(calcout, "$(Sys){$(Dev)-Ax:3}TwkRotPos-Cmd")
{
    field(DESC, "Tweak Rotitive Ax:3")
    field(INPA, "$(Sys){$(Dev)-Ax:3}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:3}TwkRot-SP NPP")
    field(CALC, "A + B")
    field(OUT, "$(Sys){$(Dev)-Ax:3}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}

record(calcout, "$(Sys){$(Dev)-Ax:3}TwkRotNeg-Cmd")
{
    field(DESC, "Tweak negative Ax:3")
    field(INPA, "$(Sys){$(Dev)-Ax:3}Rot-SP NPP")
    field(INPB, "$(Sys){$(Dev)-Ax:3}TwkRot-SP NPP")
    field(CALC, "A - B")
    field(OUT, "$(Sys){$(Dev)-Ax:3}Rot-SP PP")
    field(FLNK, "$(Sys){$(Dev)}Move-Cmd.PROC")
}


# Stop
record(bo, "$(Sys){$(Dev)}Stop-Cmd")
{
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto simple_cmd($(Sys),$(Dev),stop) $(PORT) $(A)")
    field(ZNAM, "Stop")
    field(ONAM, "Stop")
}

# Pose reachable?
record(bo, "$(Sys){$(Dev)}Reach-Cmd")
{
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto reachable_mm($(Sys),$(Dev)) $(PORT) $(A)")
    field(ZNAM, "Check pose")
    field(ONAM, "Check pose")
}

record(bi, "$(Sys){$(Dev)}Reach-I")
{
    field(DTYP, "Soft Channel")
    field(ZNAM, "Unreachable")
    field(ONAM, "Reachable")
    field(ZSV, "MINOR")
}

# Positions - Readback
record(bo, "$(Sys){$(Dev)}PosRbv-Cmd") {
  field(DESC, "Readback current pose position")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT,  "@devSmarPod.proto read_pos($(Sys),$(Dev)) $(PORT) $(A)")
  field(PINI, "NO")
  field(SCAN, ".1 second")
}

record(ai, "$(Sys){$(Dev)-Ax:1}Pos_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:1}Pos-I")
}

record(ai, "$(Sys){$(Dev)-Ax:2}Pos_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:2}Pos-I")
}

record(ai, "$(Sys){$(Dev)-Ax:3}Pos_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:3}Pos-I")
}

record(calc, "$(Sys){$(Dev)-Ax:1}Pos-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:1}Pos_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

record(calc, "$(Sys){$(Dev)-Ax:2}Pos-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:2}Pos_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

record(calc, "$(Sys){$(Dev)-Ax:3}Pos-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:3}Pos_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

record(ai, "$(Sys){$(Dev)-Ax:1}Rot-I")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "deg")
}

record(ai, "$(Sys){$(Dev)-Ax:2}Rot-I")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "deg")
}

record(ai, "$(Sys){$(Dev)-Ax:3}Rot-I")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "deg")
}

# Movement - readback
record(mbbi, "$(Sys){$(Dev)}Moving-I")
{
    field(DESC, "Movement status")
    field(VAL, "0")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_int($(Sys),$(Dev),mst) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, ".2 second")
    field(ZRVL, 0)
    field(ONVL, 1)
    field(TWVL, 2)

    field(ZRST, "Stopped")
    field(ONST, "Holding")
    field(TWST, "Moving")
}

# Movement - sync
record(seq, "$(Sys){$(Dev)}SyncAll-Cmd") {
    field(LNK1, "$(Sys){$(Dev)}Sync-Cmd.PROC")
    field(LNK2, "$(Sys){$(Dev)}PvtSync-Cmd.PROC")
    field(LNK3, "$(Sys){$(Dev)}FreqSync_.PROC")
    field(LNK4, "$(Sys){$(Dev)}VelSync_.PROC")
    field(LNK5, "$(Sys){$(Dev)}AccelSync_.PROC")
    field(LNK6, "$(Sys){$(Dev)}PvtModeSync_.PROC")
}

record(bo, "$(Sys){$(Dev)}Sync-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto sync_mm($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(ZNAM, "Sync")
    field(ONAM, "Sync")
}

record(longin, "$(Sys){$(Dev)}Err-I")
{
    field(DTYP, "Soft Channel")
    field(FLNK, "$(Sys){$(Dev)}ErrDesc-I")
    field(LOW, 0)
    field(HIGH, 0)
    field(LSV, "MINOR")
    field(HSV, "MINOR")
    #field(LOLO, 0)
    #field(HIHI, 0)
}
record(stringin, "$(Sys){$(Dev)}ErrDesc-I")
{
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto check_error($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
}


# Pivot-point
record(bo, "$(Sys){$(Dev)}PvtRbv-Cmd") {
  field(DESC, "Readback pivot point")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT,  "@devSmarPod.proto read_pivot($(Sys),$(Dev)) $(PORT) $(A)")
  field(PINI, "YES")
  field(SCAN, "Passive")
}

record(bo, "$(Sys){$(Dev)}Pvt-Cmd")
{
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_pivot_mm($(Sys),$(Dev)) $(PORT) $(A)")
    field(FLNK, "$(Sys){$(Dev)}PvtRbv-Cmd")
}

record(bo, "$(Sys){$(Dev)}PvtSync-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto sync_pivot_mm($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(ZNAM, "Sync")
    field(ONAM, "Sync")
}

record(mbbo, "$(Sys){$(Dev)}PvtMode-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_int($(Sys),$(Dev),pvm) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(FLNK, "$(Sys){$(Dev)}PvtMode-I")
    field(ZRVL, 0)
    field(ONVL, 1)

    field(ZRST, "Relative")
    field(ONST, "Fixed")
}

record(mbbi, "$(Sys){$(Dev)}PvtMode-I")
{
    field(DESC, "Pivot mode")
    field(VAL, "0")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_int($(Sys),$(Dev),pvm) $(PORT) $(A)")
    field(PINI, "YES")
    field(SCAN, "Passive")
    field(ZRVL, 0)
    field(ONVL, 1)

    field(ZRST, "Relative")
    field(ONST, "Fixed")
}

record(longout, "$(Sys){$(Dev)}PvtModeSync_")
{
    field(DOL,  "$(Sys){$(Dev)}PvtMode-I NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(Sys){$(Dev)}PvtMode-Cmd NPP")
}

# Pivot positions
record(ai, "$(Sys){$(Dev)-Ax:1}Piv_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:1}Piv-I")
}

record(ai, "$(Sys){$(Dev)-Ax:2}Piv_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:2}Piv-I")
}

record(ai, "$(Sys){$(Dev)-Ax:3}Piv_")
{
    field(DTYP, "Soft Channel")
    field(PREC, "5")
    field(EGU, "m")
    field(FLNK, "$(Sys){$(Dev)-Ax:3}Piv-I")
}

record(calc, "$(Sys){$(Dev)-Ax:1}Piv-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:1}Piv_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

record(calc, "$(Sys){$(Dev)-Ax:2}Piv-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:2}Piv_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

record(calc, "$(Sys){$(Dev)-Ax:3}Piv-I")
{
    field(INPA, "$(Sys){$(Dev)-Ax:3}Piv_ NPP MS")
    field(CALC, "A * 1000")
    field(PREC, "5")
    field(EGU, "mm")
}

# Pivot request positions
record(ao, "$(Sys){$(Dev)-Ax:1}Piv-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:2}Piv-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

record(ao, "$(Sys){$(Dev)-Ax:3}Piv-SP")
{
    field(PREC, "6")
    field(EGU, "mm")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "VAL")
}

# Miscellaneous
record(bo, "$(Sys){$(Dev)}Calib-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto calibrate($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(ZNAM, "Calibrate")
    field(ONAM, "Calibrate")
}

record(bo, "$(Sys){$(Dev)}ReadVer-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto read_version($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(ZNAM, "Read version")
    field(ONAM, "Read version")
}

record(stringin, "$(Sys){$(Dev)}Ver:Sys") {
    field(DTYP, "Soft Channel")
}

# Version
record(stringin, "$(Sys){$(Dev)}Ver:Mcs") {
    field(DTYP, "Soft Channel")
}

record(stringin, "$(Sys){$(Dev)}Ver:SPod") {
    field(DTYP, "Soft Channel")
}

record(stringin, "$(Sys){$(Dev)}Ver:SmarPod") {
    field(DTYP, "Soft Channel")
}

# Status
record(bo, "$(Sys){$(Dev)}ReadSts-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto read_status($(Sys),$(Dev)) $(PORT) $(A)")
    field(PINI, "NO")
    field(ZNAM, "Read status")
    field(ONAM, "Read status")
    field(SCAN, "10 second")
}

record(ai, "$(Sys){$(Dev)}Sts:Temp") {
    field(DESC, "Temperature")
    field(DTYP, "Soft Channel")
    field(EGU, "C")
}
record(ai, "$(Sys){$(Dev)}Sts:Load") {
    field(DESC, "System load")
    field(DTYP, "Soft Channel")
    field(EGU, "\%")
}
record(ai, "$(Sys){$(Dev)}Sts:NetIn") {
    field(DESC, "Network input")
    field(DTYP, "Soft Channel")
    field(EGU, "bytes")
}
record(ai, "$(Sys){$(Dev)}Sts:NetOut") {
    field(DESC, "Network output")
    field(DTYP, "Soft Channel")
    field(EGU, "bytes")
}
record(stringin, "$(Sys){$(Dev)}Sts:Net") {
    field(DESC, "Network")
    field(DTYP, "Soft Channel")
}
record(stringin, "$(Sys){$(Dev)}Sts") {
    field(DESC, "Device status")
    field(DTYP, "Soft Channel")
}
record(stringin, "$(Sys){$(Dev)}Sts:Uptime") {
    field(DESC, "Uptime")
    field(DTYP, "Soft Channel")
}
record(longin, "$(Sys){$(Dev)}Sts:Conn") {
    field(DESC, "Connections")
    field(DTYP, "Soft Channel")
}
record(stringin, "$(Sys){$(Dev)}Sts:Ip") {
    field(DESC, "Device IP")
    field(DTYP, "Soft Channel")
}
record(stringin, "$(Sys){$(Dev)}Sts:ClientIP") {
    field(DESC, "Client IP")
    field(DTYP, "Soft Channel")
}
record(stringin, "$(Sys){$(Dev)}Sts:Ser") {
    field(DESC, "Serial Status")
    field(DTYP, "Soft Channel")
}
record(ai, "$(Sys){$(Dev)}Sts:SerIn") {
    field(DESC, "Serial input")
    field(DTYP, "Soft Channel")
    field(EGU, "bytes")
}
record(ai, "$(Sys){$(Dev)}Sts:SerOut") {
    field(DESC, "Serial output")
    field(DTYP, "Soft Channel")
    field(EGU, "bytes")
}
record(stringin, "$(Sys){$(Dev)}Sts:LowLevel") {
    field(DESC, "Low Level")
    field(DTYP, "Soft Channel")
}

# Sensor mode
record(mbbo, "$(Sys){$(Dev)}SnsMode-Cmd") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_int($(Sys),$(Dev),sen) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(FLNK, "$(Sys){$(Dev)}SnsMode")
    field(ZRVL, 0)
    field(ONVL, 1)
    field(TWVL, 2)

    field(ZRST, "Disabled")
    field(ONST, "Enabled")
    field(TWST, "Power-save")
    field(FLNK, "$(Sys){$(Dev)}SnsMode")
}

record(mbbi, "$(Sys){$(Dev)}SnsMode")
{
    field(DESC, "Sensor mode")
    field(VAL, "0")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_int($(Sys),$(Dev),sen) $(PORT) $(A)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(ZRVL, 0)
    field(ONVL, 1)
    field(TWVL, 2)

    field(ZRST, "Disabled")
    field(ONST, "Enabled")
    field(TWST, "Power-save")
}

# Maximum frequency
record(ao, "$(Sys){$(Dev)}Freq-SP") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_float($(Sys),$(Dev),frq) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU, "Hz")
    field(PREC, "1")
    field(FLNK, "$(Sys){$(Dev)}Freq-I")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "")
}

record(ai, "$(Sys){$(Dev)}Freq-I")
{
    field(DESC, "Maximum frequency")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_float($(Sys),$(Dev),frq) $(PORT) $(A)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(EGU, "Hz")
    field(VAL, "8000")
    field(PREC, "1")
}

record(ao, "$(Sys){$(Dev)}FreqSync_")
{
    field(DOL,  "$(Sys){$(Dev)}Freq-I NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(Sys){$(Dev)}Freq-SP NPP")
}

# Maximum velocity
record(ao, "$(Sys){$(Dev)}Vel-SP") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_float($(Sys),$(Dev),vel) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU, "m/s")
    field(PREC, "5")
    field(FLNK, "$(Sys){$(Dev)}Vel-I")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "")
}

record(ai, "$(Sys){$(Dev)}Vel-I")
{
    field(DESC, "Velocity")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_float($(Sys),$(Dev),vel) $(PORT) $(A)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(EGU, "m/s")
    field(PREC, "5")
}

record(ao, "$(Sys){$(Dev)}VelSync_")
{
    field(DOL,  "$(Sys){$(Dev)}Vel-I NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(Sys){$(Dev)}Vel-SP NPP")
}

# Maximum acceleration
record(ao, "$(Sys){$(Dev)}Accel-SP") {
    field(DTYP, "stream")
    field(OUT,  "@devSmarPod.proto set_float($(Sys),$(Dev),acc) $(PORT) $(A)")
    field(PINI, "NO")
    field(SCAN, "Passive")
    field(EGU, "m/s^2")
    field(PREC, "5")
    field(FLNK, "$(Sys){$(Dev)}Accel-I")

    info(autosaveFields_pass0, "VAL")
    info(autosaveFields, "")
}

record(ai, "$(Sys){$(Dev)}Accel-I")
{
    field(DESC, "Acceleration")
    field(DTYP, "stream")
    field(INP,  "@devSmarPod.proto read_float($(Sys),$(Dev),acc) $(PORT) $(A)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(EGU, "m/s^2")
    field(PREC, "5")
}

record(ao, "$(Sys){$(Dev)}AccelSync_")
{
    field(DOL,  "$(Sys){$(Dev)}Accel-I NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(Sys){$(Dev)}Accel-SP NPP")
}
